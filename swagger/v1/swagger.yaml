---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/items":
    get:
      summary: Retrieves a list of items
      tags:
      - Items
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  items:
                    type: array
                    items:
                      type: object
                required:
                - success
                - items
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                required:
                - success
                - message
    post:
      summary: Creates an item
      tags:
      - Items
      parameters: []
      responses:
        '201':
          description: item created
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                image:
                  type: string
                finance_fee:
                  type: integer
                purchase_fee:
                  type: integer
                total_amount:
                  type: integer
                duration:
                  type: integer
                apr:
                  type: number
              required:
              - name
              - description
              - finance_fee
              - purchase_fee
              - total_amount
              - duration
              - apr
  "/api/v1/items/{id}":
    get:
      summary: Retrieves an item
      tags:
      - Items
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: item found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  item:
                    type: object
                required:
                - success
                - item
        '404':
          description: item not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                required:
                - success
                - message
    delete:
      summary: Deletes an item
      tags:
      - Items
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: item deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                required:
                - success
                - message
        '404':
          description: item not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                required:
                - success
                - message
  "/api/v1/reservations":
    get:
      summary: Retrieves a list of reservations
      tags:
      - Reservations
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    date:
                      type: string
                    city:
                      type: string
                    user_id:
                      type: integer
                    item_id:
                      type: integer
                  required:
                  - id
                  - date
                  - city
                  - user_id
                  - item_id
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
    post:
      summary: Creates a reservation
      tags:
      - Reservations
      parameters: []
      responses:
        '201':
          description: reservation created
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: string
                city:
                  type: string
                user_id:
                  type: integer
                item_id:
                  type: integer
              required:
              - date
              - city
              - user_id
              - item_id
  "/api/v1/reservations/{id}":
    get:
      summary: Retrieves a reservation
      tags:
      - Reservations
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: reservation found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  date:
                    type: string
                  city:
                    type: string
                  user_id:
                    type: integer
                  item_id:
                    type: integer
                required:
                - id
                - date
                - city
                - user_id
                - item_id
        '404':
          description: reservation not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
    delete:
      summary: Deletes a reservation
      tags:
      - Reservations
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: reservation deleted
        '404':
          description: reservation not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
  "/api/v1/users":
    get:
      summary: Retrieves a list of users
      tags:
      - Users
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  users:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        email:
                          type: string
                      required:
                      - id
                      - name
                      - email
                required:
                - success
                - users
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                required:
                - success
                - message
    post:
      summary: Creates a user
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: user created
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                password_confirmation:
                  type: string
              required:
              - name
              - email
              - password
              - password_confirmation
  "/api/v1/users/{id}":
    get:
      summary: Retrieves a user
      tags:
      - Users
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: user found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      email:
                        type: string
                    required:
                    - id
                    - name
                    - email
                required:
                - success
                - user
        '404':
          description: user not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                required:
                - success
                - message
    delete:
      summary: Deletes a user
      tags:
      - Users
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: user deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                required:
                - success
                - message
        '404':
          description: user not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                required:
                - success
                - message
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
